<?php

/**
 * @file
 */

define('LDAP_QUERY_MENU_BASE_PATH', 'admin/config/people/ldap');
define('LDAP_QUERY_INDEX_BASE_PATH', 'admin/config/people/ldap/query');
// For argument offsets.
define('LDAP_QUERY_MENU_BASE_PATH_PARTS', 4);

/**
 *
 */
function ldap_query_menu() {
  $menu_offset = 4;

  $items['admin/config/people/ldap/query'] = [
    'title' => 'Queries',
    'page callback' => 'ldap_query_index',
    'page arguments' => [],
    'weight' => 6,
    'type' => MENU_LOCAL_TASK,
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  $items['admin/config/people/ldap/query/list'] = [
    'title' => 'Queries',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  ];

  $items['admin/config/people/ldap/query/add'] = [
    'title' => 'Add LDAP Query',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['ldap_query_admin_form', 'add'],
    'type' => MENU_LOCAL_TASK + MENU_CONTEXT_INLINE,
    'weight' => 3,
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  $items['admin/config/people/ldap/query/edit/%'] = [
    'title' => 'Edit LDAP Query',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['ldap_query_admin_form', 'edit', $menu_offset + 2],
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  $items['admin/config/people/ldap/query/test/%'] = [
    'title' => 'Test LDAP Query',
    'page callback' => 'ldap_query_test',
    'page arguments' => [$menu_offset + 2],
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  $items['admin/config/people/ldap/query/delete/%'] = [
    'title' => 'Delete LDAP Query',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['ldap_query_admin_delete', $menu_offset + 1, $menu_offset + 2],
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  $items['admin/config/people/ldap/query/enable/%'] = [
    'title' => 'Enable LDAP Query',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['ldap_query_admin_enable_disable', $menu_offset + 1, $menu_offset + 2],
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  $items['admin/config/people/ldap/query/disable/%'] = [
    'title' => 'Enable LDAP Query',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['ldap_query_admin_enable_disable', $menu_offset + 1, $menu_offset + 2],
    'access arguments' => ['administer site configuration'],
    'file' => 'ldap_query.admin.inc',
  ];

  return $items;
}

/**
 *
 */
function ldap_query_theme() {
  return [
    'ldap_query_list' => [
      'variables' => ['ldap_query' => NULL, 'actions' => TRUE, 'type' => 'table'],
      'render element' => 'element',
      'file' => 'ldap_query.theme.inc',
    ],
    'ldap_query' => [
      'variables' => ['ldap_server' => NULL, 'actions' => FALSE, 'type' => 'detail'],
      'render element' => 'element',
      'file' => 'ldap_query.theme.inc',
    ],
    'ldap_query_results' => [
      'variables' => ['ldap_query' => NULL, 'result' => FALSE, 'show_query' => TRUE],
      'render element' => 'element',
      'file' => 'ldap_query.theme.inc',
    ],
  ];
}

/**
 *
 */
function ldap_query_cache_clear() {
  $discard = ldap_query_get_queries(NULL, 'all', FALSE, TRUE);
}

/**
 * Return ldap query objects.
 *
 * @param string $qid
 * @param string $type
 *   'all', 'enabled',.
 * @param bool $flatten
 *   signifies if array or single object returned. Only works if sid is specified.
 * @param bool $reset
 *   do not use cached or static result.
 *
 * @return array
 *   of server conf object keyed on sid
 *   - single server conf object (if flatten == TRUE)
 */
function ldap_query_get_queries($qid = NULL, $type = NULL, $flatten = FALSE, $reset = FALSE) {
  ldap_servers_module_load_include('inc', 'ldap_query', 'ldap_query');
  return _ldap_query_get_queries($qid, $type, $flatten, $reset);
}

/**
 *
 */
function ldap_query_fields() {
  ldap_servers_module_load_include('php', 'ldap_query', 'LdapQuery.class');
  return LdapQuery::fields();
}

/**
 * Implements hook_autoload_info().
 */
function ldap_query_autoload_info() {
  return array(
    'LdapQuery' => 'LdapQuery.class.php',
    'LdapQueryAdmin' => 'LdapQueryAdmin.class.php',
    'LdapQueryInc' => 'ldap_query.inc',
  );
}

/**
 * Implements hook_config_info().
 */
function ldap_query_config_info() {

  $prefixes['ldap.query'] = array(
    'name_key' => 'id',
    'label_key' => 'name',
    'group' => t('LDAP queries'),
  );
  return $prefixes;
}
